name: Build and Deploy

on:
  push:
    branches:
      - develop
      - release
      - master
env:
  BUILD_CONFIG: 'Release'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up .NET Core SDK
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0'

    - name: Install Entity Framework CLI
      run: dotnet tool install --global dotnet-ef

    # - name: Build .NET Projects
    #   run: dotnet build */*.csproj --configuration $BUILD_CONFIG

    - name: Build .NET Projects
      run: dotnet build AzAiIntegration.IntegrationTest/AzAiIntegration.IntegrationTest.csproj --configuration $BUILD_CONFIG

    # - name: Run .NET Tests
    #   run: dotnet test **/Tests.csproj --configuration $BUILD_CONFIG

    - name: Create EF Core migration script ()
      run: dotnet ef migrations script --project AzAiIntegration.DataAccess --context AppxDbContext -i --output ${{github.workspace}}/myapp/migration.sql

    # - name: Create EF Core migration script ()
    #   run: dotnet ef migrations script --project AzAiIntegration.DataAccess --startup-project Web --context AppxDbContext -i --output ${{github.workspace}}/myapp/migration.sql

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3.0.0
      with:
        name: SQLDB
        path: ${{ github.workspace }}/myapp/migration.sql

  deploySqlscriptsonDev:
    runs-on: ubuntu-latest
    needs: build
    # environment: DEV

    steps:
    - name: Download Build Artifacts
      uses: actions/download-artifact@v3.0.0
      with:
        name: SQLDB
        
    - uses: azure/login@v1
      with: 
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Publish Azure Function App
      run: func azure functionapp stop testfnc
      # working-directory: ${{ env.AZURE_FUNCTION_PROJ_PATH }}      
      
    # - name: Stop Azure Function App
    #   uses: azure/functions-action@v1
    #   # id: fa
    #   with:
    #     app-name: testfnc
    #     action: stop
    #     # resource-group-name: testfnc_group

    - name: Azure SQL deploy-database
      uses: azure/sql-action@v2.3
      with:
        server-name: testsqlserver00
        connection-string: ${{ secrets.sqldbconnection}}
        db-name: testsql001
        path: 'migration.sql'
        action: publish
        # dacpac-package: ${{ github.workspace }}/myapp/migration.sql
        # dacpac-package: migration.sql
        # script-file: ${{ github.workspace }}/myapp/migration.sql
        
    - name: Start Azure Function App
      uses: azure/webapps-deploy@v2
      with:
        app-name: testfnc
        action: 'start'
    
    # - name: Login to Azure Subscription 1
    #   uses: azure/login@v1
    #   with:
    #    client-id: ${{ secrets.AZURE_CLIENT_ID }}
    #    tenat-id: ${{ secrets.AZURE_TENANT_ID }}
    #    subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # - name: Stop Azure Function App
    #   uses: azure/webapps-deploy@v2
    #   with:
    #     app-name: ${{ secrets.FUNCTIONS_APP_NAME }}
    #     action: 'stop'

    # - name: Login to Azure Subscription 2
    #   uses: azure/login@v1
    #   with:
    #    client-id: ${{ secrets.AZURE_CLIENT_ID }}
    #    tenat-id: ${{ secrets.AZURE_TENANT_ID }}
    #    subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # - name: Fetch Secrets from Azure key Vault
    #   id: keyvault
    #   uses: azure/get-keyvault-secrets@v1
    #   with:
    #     keyvault: ${{ secrets.KEYVAULT_NAME }}
    #     secrets: |
    #       db-connection-string

    # - name: Azure SQL deploy-database
    #   uses: azure/sql-action@v1.3
    #   with:
    #     server-name: ${{ secrets.SQL_SERVER_NAME }}
    #     connection-string: ${{ steps.keyvault.outputs.db-connection-string }}
    #     db-name: ${{ secrets.SQL_DB_NAME }}
    #     script-file: migration.sql
    #     # dacpac-package: ${{ github.workspace }}/myapp/migration.sql
    #     # script-file: ${{ github.workspace }}/myapp/migration.sql

    # - name: Login to Azure Subscription 1
    #   uses: azure/login@v1
    #   with:
    #    client-id: ${{ secrets.AZURE_CLIENT_ID }}
    #    tenat-id: ${{ secrets.AZURE_TENANT_ID }}
    #    subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # - name: Start Azure Function App
    #   uses: azure/webapps-deploy@v2
    #   with:
    #     app-name: ${{ secrets.FUNCTIONS_APP_NAME }}
    #     slot-name: 'production'
    #     action: 'start'
